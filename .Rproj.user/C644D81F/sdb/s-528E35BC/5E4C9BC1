{
    "collab_server" : "",
    "contents" : "#function to score a new customer\n\n#input tests\n#categories\n#Customer pleaser, efficient operator, growth oriented\n\n#responses\n#1 It's important to me how I'm percieved in the community\n#2 I'm always trying to undersatnd my customers' needs\n#3 Making sure that the store is always properly stocked is important\n#4 Getting a deal from a supplier is how they get my business\n#5 I'm always looking for ways to attract new customers\n\ntest_customer1<-c(5,5,3,2,1)\ntest_customer2<-c(1,1,3,4,5)\ntest_customer3<-c(2,3,3,2,3)\n\n\nscore<-function(response) {\n    \n    #cluster centers. The estimates below could be an output of k-means procedure\n    cluster_name<-c(\"Customer Pleaser\", \"Efficient Operator\", \"Growth First\")\n    cluster_image<-list(\"CP.png\",\"EO.png\",\"GF.png\")\n    cluster_coord1<-c(8,5,1)\n    cluster_coord2<-c(1,3,8)\n    \n    #linear combinations of responses used to score new observations. The estimates below\n    #could be an output of linear discriminant analysis\n    dim1<-c(.8,.7,.3,.1,.3)\n    dim2<-c(.3,.1,.3,.7,.8)\n    \n    #estimate coordinates in 2D from lda for a new observation\n    coord1<-sum(response*dim1)\n    coord2<-sum(response*dim2)\n    \n    min_distance<-1000\n    index<-1\n    \n    #find the distanse to the nearest cluster center for a new response and output the \"label\"\n    for (i in 1:3) {\n        \n        distance<-sqrt((cluster_coord1[i]-coord1)^2+(cluster_coord2[i]-coord2)^2)\n        if(min_distance>=distance) {\n            min_distance=distance \n            index=i\n        }\n    }\n   result<-list(cluster_name[index],cluster_image[index])\n} \n\n\n\n",
    "created" : 1463245154939.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2185198960",
    "id" : "5E4C9BC1",
    "lastKnownWriteTime" : 1463325470,
    "last_content_update" : 1463325470038,
    "path" : "~/R/DS/DataProducts/ScoreCustomer/score.R",
    "project_path" : "score.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}